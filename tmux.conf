# allow to view the title over ssh. Otherwise the local command, i.e `ssh <host>` would just have been shown
set -g set-titles on
set -g set-titles-string '#{pane_title}'
set -g set-titles-string "[#H] #{pane_title}"

# terminfo
set -g default-terminal "foot"
# tell Tmux that outside terminal supports true color
set -ga terminal-overrides ",xterm-256color*:Tc"
# bar cursor
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

# escape time should be 0 on localhost
set -sg escape-time 0
# set first window to index 1 (not 0) to map more to the keyboard layout

set-option -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1

# set scrollback buffer size
# useful for viewing log output (e.g. Docker)
set -g history-limit 20000

bind -n M-0 select-window -t 0
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# split panes using | and -
unbind '"'
unbind %
bind t split-window -v
bind s split-window -h
# bind-key t split-window -h "htop"

# this is c-tab in alacritty
bind-key -n C-y next-window

bind-key -n C-h select-pane -L
bind-key -n C-o select-pane -R
bind-key -n C-n select-pane -U
bind-key -n C-t select-pane -D

# this lets me move forward by word
unbind M-f

# see alacritty.yml for more info
bind -n C-v new-window
bind -n C-s kill-pane
bind c  kill-pane


# see alacritty
bind -n C-t copy-mode

# mouse -- geez
set -g mouse on

bind-key -T copy-mode ',' send-keys -X cursor-left
bind-key -T copy-mode 'p' send-keys -X cursor-right
bind-key -T copy-mode 'u' send-keys -X next-word
bind-key -T copy-mode 'l' send-keys -X rectangle-toggle
bind-key -T copy-mode 'f' send-keys -X clear-selection
bind-key -T copy-mode 'o' send-keys -X previous-word
bind-key -T copy-mode 'd' send-keys -X begin-selection

bind-key -T copy-mode 'j' send-keys -X copy-selection


bind-key -T copy-mode 'a' send -X start-of-line
bind-key -T copy-mode 's' send -X end-of-line

# set hilight color to light blue
set-window-option -g mode-style bg=colour153

bind-key -T copy-mode 'c' send -X start-of-line\; send-keys Up \; send -X back-to-indentation \; send -X begin-selection \;  send -X end-of-line
bind-key -T copy-mode 't' send-keys Down \; send -X back-to-indentation \; send -X begin-selection \;  send -X end-of-line


#status bar
set -g status-position top
set -g status-style fg=colour8


# status bar
# set -g status off
set -g status-interval 5
set -g status-right-length 170
set -g status-left-length 170
set -g status-left ""
set -g status-left "#[fg=default,bold][#[fg=colour6,nobold]#H#[fg=default,bold]] "

set -g window-status-separator ""
set -g status-right " #(/usr/bin/cut -d ' ' -f 1,2,3 /proc/loadavg) | #[fg=green]#[fg=green]#(/usr/bin/df -h --output=avail /)B#[fg=default,nobold] |#[fg=blue] %H.%M "


# colors separator
setw -g pane-border-style fg=colour19,bg=default
setw -g pane-active-border-style fg=colour19,bg=default

# dimming inactive windows
setw -g window-active-style fg=colour8,bg=color236
setw -g window-style bg=colour255


# active window
set -g window-status-current-style 'bg=colour4 fg=colour236,bold'
set -g window-status-current-format '  #I#[fg=colour240]:#[fg=colour236]#T  '

# inactive window
# setw -g window-status-format ' #I#[fg=colour241]:#[fg=colour232]#W#[fg=colour244]#F '
set -g window-status-style 'bg=colour240 fg=colour220,bold'
set -g window-status-format '  #I#[fg=colour221]:#[fg=colour220]#T  '

set -g status-bg 'colour240'
set -g pane-active-border-style bg=colour240,fg=colour240
set -g pane-border-style fg=colour240,bg=colour240


set -g @fuzzback-bind h

# List of plugins
set -g @plugin 'roosta/tmux-fuzzback'
set -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tpm'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# if run as "tmux attach", create a session if one does not already exist
#new-session -n $HOS
